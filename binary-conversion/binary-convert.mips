.global binary_convert
#load word into register
#store byte offset
#load byte into register
#bitwise AND against $v0 and store result in $v0
#check for null byte
#incremenent byte offset
#repeat
# "01"
# 0000 0000 | 0000 0001

binary_convert:
  li $t2, 1    #start with 1 in solutions register
  move $v0, $zero #zero out solutions register
  move $t0, $a0 #copy word address out of argument register
  lbu $t1, 0($t0) #copy first byte from word
  and $t2, $t2, $t1 #determine if last bit is 1
  or $v0, $v0, $t2 #add bit to solution
  lbu $t1, 1($t0) #copy second byte from word
  beq $zero, $t1, exit #exit if second byte is null
  sll $v0, $v0, 1
  li $t2, 1
  and $t2, $t2, $t1 #determine if last bit is 1
  or $v0, $v0, $t2
  jr $ra
  
  
exit:
  jr $ra